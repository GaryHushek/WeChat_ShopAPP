<style lang='less'>
// 公共样式
.fl {
  float: left;
}
.fr {
  float: right;
}
.clearfix {
  overflow: hidden;
}
// 搜索模块样式

.search-bar {
  box-sizing: border-box;
  width: 100%;
  padding: 30rpx 15rpx;
  height: 120rpx;
  background-color: #eee;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  icon {
    position: absolute;
    z-index: 999;
    left: 40rpx;
    top: 50%;
    transform: translateY(-50%);
  }
  form {
    width: 100%;
    height: 60rpx;
    position: relative;
    box-sizing: border-box;
    .search-input {
      float: left;
      background: #fff;
      font-size: 26rpx;
      color: #333;
      border-radius: 10rpx;
      width: 538rpx;
      height: 100%;
      text-align: left;
      padding: 0 70rpx;
      box-sizing: border-box;
      margin-right: 20rpx;
    }
    button {
      float: right;
      width: 156rpx;
      height: 100%;
      font-size: 30rpx;
      line-height: 58rpx;
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }
  }
}
// 历史搜索模块样式
.history {
  padding: 0 30rpx 0 16rpx;
  .title {
    font-size: 30rpx;
    height: 88rpx;
    line-height: 88rpx;
    display: flex;
    justify-content: space-between;
    .iconfont {
      color: #ccc;
      font-size: 38rpx;
    }
  }
  .history-content {
    display: flex;
    flex-wrap: wrap;
    .item {
      background-color: #ddd;
      height: 64rpx;
      padding: 20rpx 25rpx;
      box-sizing: border-box;
      font-size: 26rpx;
      margin: 0 30rpx 20rpx 0;
      line-height: 24rpx;
      box-sizing: border-box;
    }
  }
}
</style>
<template>
  <!-- 搜索 -->
  <view class="search-bar">
    <icon type="search" size="16"></icon>
    <form>
        <input type="text" confirm-type="search" @confirm="search" class="search-input" @focus="toSearchPage" @blur="inputDone" placeholder="搜索" value="{{userSearchContent}}">
        <button type="subimit" @tap="cancel">取消</button>
    </form>
  </view>
  <!-- 历史搜索 -->
  <view class="history">
    <view class="title">
      <text>历史搜索</text>
      <text wx:if="{{!isDelete}}" class="iconfont icon-shanchu" @tap="deleteHistory"></text>
    </view>
    <view class="history-content">
      <block wx:for="{{historySearchData}}">
        <view wx:if="{{historySearchData.length == 0}}" class="noHistoryData">无历史搜索记录</view>
        <navigator class="item" url="/pages/goods_list?query={{item.searchData}}">{{item.searchData}}</navigator>
     </block>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
export default class Example extends wepy.page {
  config = {
    navigationBarTitleText: '搜索'
  }

  data = {
    // 历史搜索记录数据
    historySearchData: '',
    // 删除历史搜索记录标志位
    isDelete: false,
    // 用户输入的搜索内容
    userSearchContent: ''
  }

  components = {}

  methods = {
    // 清除历史搜索记录
    deleteHistory(event) {
      console.log(event)
      this.historySearchData = []
      // 删除历史记录按钮隐藏
      this.isDelete = true
      // 清除本缓存中的历史搜索记录
      wepy.removeStorage({
        key: 'historySearch',
        success: res => {
          console.log('删除成功')
        },
        fail: err => {
          console.log(err)
        }
      })
    },
    // 搜索
    search(event) {
      console.log(event)
      // 拿到用户输入的内容
      var searchContent = event.detail.value.trim() // 去除内容两端的空格
      // 跳转到搜索列表页
      wx.navigateTo({
        url: 'goods_list?query=' + searchContent
      })
      if (!searchContent) {
        return
      }
      // 检测本地是否有历史搜索记录
      wx.getStorage({
        key: 'historySearch',
        success: res => {
          console.log(res)
          // 有历史搜索记录,取出,添加,存入localStroage
          var searchDataList = res.data // 取到历史搜索记录的数组
          // 检测搜索记录中是否有搜索内容跟本次相同
          console.log(searchDataList)
          for (var i = 0; i < searchDataList.length; i++) {
            if (searchDataList[i].searchData == searchContent) {
              return
            }
          }
          searchDataList.push({
            searchData: searchContent,
            id: searchDataList[searchDataList.length - 1].id + 1
          }) // 添加本次搜索进入本地缓存搜索记录
          wx.setStorage({
            key: 'historySearch',
            data: searchDataList
          })
          // 页面同步历史搜索记录
          // this.historySearchData = searchDataList
          // this.$apply()
        },
        fail: err => {
          // 如果失败,检测时候是没有数据
          if (err.errMsg.indexOf('data not found', 0)) {
            // 没有历史搜索记录
            // 创建一个本地缓存,保存历史搜索记录
            wx.setStorage({
              key: 'historySearch',
              data: [
                {
                  id: 0,
                  searchData: searchContent
                }
              ]
            })
            // 页面同步历史搜索记录数据
            // this.historySearchData = [{ searchData: searchContent }]
            // 删除历史搜索记录按钮显示
            this.isDelete = false
            this.$apply()
            return
          }
          console.log(err)
        }
      })
    },
    // 用户输入完成
    inputDone(event) {
      // console.log(event);
      this.userSearchContent = event.detail.value
    },
    // 取消输入
    cancel(event) {
      console.log(event)
      this.userSearchContent = ''
      console.log(this.userSearchContent)
    }
  }

  events = {}

  watch = {}

  computed = {}

  onLoad(options) {
    console.log(options)
    // 查询本地缓存,拿到历史搜索记录
    wx.getStorage({
      key: 'historySearch',
      success: res => {
        // 有历史搜索记录
        console.log(res)
        this.historySearchData = res.data
      },
      fail: err => {
        // 如果失败,检测时候是没有数据
        if (err.errMsg.indexOf('data not found', 0)) {
          // 没有历史搜索记录
          this.historySearchData = []
          // 删除历史搜索记录按钮隐藏
          this.isDelete = true
          return
        }
        console.log(err)
      }
    })
  }

  onShow() {
    // 查询本地缓存,拿到历史搜索记录
    wx.getStorage({
      key: 'historySearch',
      success: res => {
        // 有历史搜索记录
        console.log(res)
        this.historySearchData = res.data
      },
      fail: err => {
        // 如果失败,检测时候是没有数据
        if (err.errMsg.indexOf('data not found', 0)) {
          // 没有历史搜索记录
          this.historySearchData = []
          // 删除历史搜索记录按钮隐藏
          this.isDelete = true
          return
        }
        console.log(err)
      }
    })
  }
}
</script>

