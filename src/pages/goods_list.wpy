<style lang='less'>
page {
  height: 100%;
  display: flex;
  flex-direction: column;
}
// 搜索模块样式
.search-bar {
  box-sizing: border-box;
  width: 100%;
  padding: 20rpx 16rpx;
  height: 100rpx;
  background-color: #eee;
  justify-content: center;
  align-items: center;
  position: relative;
  icon {
    position: absolute;
    z-index: 999;
    left: 40rpx;
    top: 50%;
    transform: translateY(-50%);
  }
  .search-input {
    background: #fff;
    font-size: 26rpx;
    color: #333;
    border-radius: 10rpx;
    height: 60rpx;
    width: 100%;
    text-align: left;
    box-sizing: border-box;
    padding: 0 70rpx;
  }
}
.top-control {
  height: 100rpx;
  width: 100%;
  display: flex;
  font-size: 30rpx;
  .sales {
    .salesBtn {
      display: flex;
      flex-direction: column;
      font-size: 20rpx;
      margin-left: 10rpx;
      .iconfont {
        font-size: 20rpx;
        padding: 2rpx;
      }
      .icon-jiantoushang {
        margin-bottom: -2rpx;
      }
    }
  }
  .active {
    color: #ff2d4a;
  }
  .item {
    flex: 1;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    .icon {
      margin-left: 10rpx;
      display: flex;
      flex-direction: column;
      justify-content: center;
      .iconfont {
        font-size: 20rpx;
        padding: 2rpx;
      }
      .icon-jiantoushang {
        margin-bottom: -2rpx;
      }
    }
  }
}
// 产品列表
.main {
  flex: 1;
  display: flex;
  width: 100%;
  .good_list {
    width: 100%;
    scroll-view {
      width: 100%;
      height: 100%;
      .item {
        height: 260rpx;
        border-bottom: 2rpx solid #ddd;
        border-top: 2rpx solid #ddd;
        display: flex;
        align-items: center;
        image {
          width: 200rpx;
          height: 200rpx;
          padding-left: 20rpx;
        }
        .goods-Info {
          flex: 1;
          height: 200rpx;
          font-size: 28rpx;
          padding: 0 30rpx;
          box-sizing: border-box;
          display: flex;
          flex-direction: column;
          justify-content: space-between;
          .title {
            word-break: break-all;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
          }
        }
        .price {
          color: #ff2d4a;
          font-size: 24rpx;
          .price {
            font-size: 32rpx;
            margin-right: 4rpx;
          }
        }
      }
    }
  }
}
</style>
<template>
  <!-- 搜索 -->
  <view class="top">
    <view class="search-bar">
     <icon type="search" size="16"></icon>
     <input type="text" class="search-input" confirm-type="search" bindconfirm="searchGoods" value="{{searchContent}}" placeholder="搜索">
    </view>
    <view class="top-control">
        <view @tap="selectItem(0)" class="default item {{selectIndex==0?'active':''}}">综合</view>
        <view @tap="selectItem(1)" class="sales item {{selectIndex==1?'active':''}}">
           <view>销量</view>
           <view class="salesBtn">
              <text class="iconfont icon-jiantoushang" style="color:{{salesFlag==0?upColor:'#333'}}"></text>
              <text class="iconfont icon-jiantouxia" style="color:{{salesFlag==1?downColor:'#333'}}"></text>
           </view>
        </view>
        <view @tap="selectItem(2)" data-flag="{{selectIndex}}" class="price item {{selectIndex==2?'active':''}}">
            <view class="price-btn">价格</view>
            <view class="icon">
                <text class="iconfont icon-jiantoushang" style="color:{{sortFlag==0?upColor:'#333'}}"></text>
                <text class="iconfont icon-jiantouxia" style="color:{{sortFlag==1?downColor:'#333'}}"></text>
            </view>
        </view>
     </view>
  </view>
  <!-- 搜索内容 -->
  <view class="main">
    <view class="good_list">
       <scroll-view scroll-y scroll-with-animation @scroll="">
         <block wx:for="{{goods_list}}">
             <navigator url="goods_detail?goods_id={{item.goods_id}}" class="item">
                 <image src="{{item.goods_small_logo}}"></image>
                 <view class="goods-Info">
                     <view class="title">{{item.goods_name}}</view>
                     <view class="price">
                         ￥<text class="price">{{item.goods_price}}.</text>00
                     </view>
                  </view>
              </navigator>
         </block>
       </scroll-view>
    </view>
  </view>
</template>

<script>
// 引入封装好的函数
var methods = require('../utils/methods.js')
// 引入组件
import searchBar from '../component/searchBar'
import wepy from 'wepy'
export default class goods_list extends wepy.page {
  config = {
    navigationBarTitleText: '搜索'
  }

  data = {
    searchContent: '', // 搜索内容
    goods_list: '', //搜索结果列表数据
    selectIndex: 0, // 排序标志位
    priceFlag: 0,
    upColor: '#ddd',
    downColor: '#ddd',
    sortFlag: false,
    salesFlag: false
  }

  components = {
    searchBar //声明组件
  }

  methods = {
    searchGoods(event) {
      console.log(event)
      // 调用搜索函数
      this.search(event.detail.value)
      // 调用引入的分装好的保存stroage函数
      methods.methods.saveHistorySearch({
        key: 'historySearch',
        data: event.detail.value
      })
    },
    // 选择排序方式
    selectItem(index) {
      this.selectIndex = index
      if (index == 2) {
        console.log('1111')
        console.log(index)
        this.sortFlag = !this.sortFlag
        // console.log(this.sortFlag)
        if (this.sortFlag) {
          // this.sortFlag = 1 降序
          this.goods_list.sort((a, b) => {
            return a.goods_price - b.goods_price
          })
        } else {
          this.goods_list.sort((a, b) => {
            return b.goods_price - a.goods_price
          })
        }
      } else if (index == 1) {
        this.salesFlag = !this.salesFlag
        if (this.salesFlag) {
          this.goods_list.sort((a, b) => {
            // console.log(a);
            // console.log(b);
            // 返回一个排序的依据 布尔即可
            return a.goods_id - b.goods_id
          })
        } else {
          this.goods_list.sort((a, b) => {
            // console.log(a);
            // console.log(b);
            // 返回一个排序的依据 布尔即可
            return b.goods_id - a.goods_id
          })
        }
      }else {
        
      }
    },
    // 价格排序方式
    priceChoose(index) {
      this.priceFlag = index
    },
    priceSort(event) {
      console.log(event)
    }
  }

  events = {}

  watch = {}

  computed = {}

  onLoad(options) {
    console.log(methods)
    console.log(options)
    // 根据用户搜索内容查询数据
    this.search(options.query || '')
    this.searchContent = options.query || ''
  }

  onShow() {}
  // 根据内容搜索数据
  search(searchInfo) {
    // loding提示
    wx.showLoading({
      title: '正在努力加载中',
      mask: true
    })
    methods.methods.request({
      url: 'api/public/v1/goods/search?query=' + searchInfo,
      success: backData => {
        console.log(backData)
        // 关闭loading
        wx.hideLoading()
        // 查询到有数据赋值给goods_list
        this.goods_list = backData.data.message.goods
        this.$apply()
      }
    })
  }
  /**
   * 价格排序
   * options:{
   *  flag : Number  0:升序(默认) 1:降序
   *  priceArry : Arrary 价格数组(必填)
   *  callBack(arry) : 排序完成之后需要做的回调(选填,会把排序完成之后的数组传入回调)
   * }
   */
  priceSortMethod(options) {
    // 拿到传入的数组
    var priceList = options.priceArry
    var result
    if (options.flag) {
      // 传入flag为1
      for (var i = 0; i < priceList.length; i++) {
        for (var j = i; j < priceList.length - i - 1; j++) {
          if (priceList[j] > priceList[j + 1]) {
            var flag = priceList[j]
            priceList[j] = priceList[j + 1]
            priceList[j + 1] = priceList[j]
          }
        }
      }
    } else {
      // 用户传入0  或者 没传入
      return priceList
    }
  }
}
</script>
